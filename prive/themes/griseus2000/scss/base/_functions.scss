/**
 * Fonctions utiles au projet
 */
@function _hsl($h, $s, $l) {
  @return unquote('hsl(#{$h}, #{$s}, #{$l})');
}

@function _hsla($h, $s, $l, $a) {
  @return unquote('hsla(#{$h}, #{$s}, #{$l}, #{$a})');
}

/**
 * Convertir des px en em
 *
 * @param int $pixels - Taille en px
 * @param int $context - Taille de police par d√©faut du navigateur
 * @return taille en em
**/
@function em($pixels, $context: 16) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1em;
}

/** 
 * Function to get next map item
 * returns next map item or fallback value if map, key or next item does not exist
 *
 * https://gist.github.com/agorilla/9df052eb1e15d8aea446
 *
 * @param {Map} $map - Sass list map
 * @param {String} $key - List map key
 * @param {String} $fallback (false) - Fallback value if map, key or next item does not exist
 */
@function map-get-next($map, $key, $fallback: false) {

  // Check if map is valid
  @if type_of($map) == map {

    // Check if key exists in map
    @if map_has_key($map, $key) {

      // Init index counter variable
      $i: 0;

      // Init key index
      $key-index: false;

      // Traverse map for key
      @each $map-key, $map-value in $map {
        // Update index
        $i: $i + 1;

        // If map key found, set key index
        @if $map-key == $key {
          $key-index: $i;
        }

        // If next index return next value
        @if $i == $key-index + 1 {
          @return $map-value;
        }

        // If last entry return false
        @if $i == length($map) {
          @return $fallback;
        }
      }

      @warn 'No next map item for key #{$key}';
      @return $fallback;
    }

    @warn 'No valid key #{$key} in map';
    @return $fallback;
  }

  @warn 'No valid map';
  @return $fallback;
}
